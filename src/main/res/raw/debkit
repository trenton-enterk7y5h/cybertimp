#
# The configuration of this script.
#
# all the files that came with this package (base location)

# load all paths set by the App
source $(dirname $0)/config

# mounting path
MNT=$BIN/mnt
# busybox path
BB=$BIN/bin
# debootstrap extract path
BS=$BIN/debootstrap

#
# The script - please don't change things below if you have no clue.
#

setup_sys()
{
	case "$1" in
	system)
		echo "Creating directory $KIT..."
		$BIN/busybox mkdir -p $KIT
		echo "Creating directory $MNT..."
		$BIN/busybox mkdir -p $MNT
		echo "Creating directory $BS..."
		$BIN/busybox mkdir -p $BS
		echo "Creating directory $BB..."
		$BIN/busybox mkdir -p $BB
	;;
	busybox)
		echo "Installing Busybox in $BB..."
		$BIN/busybox cp $BIN/busybox $BB/busybox
		$BB/busybox --install $BB
		echo "Done."
	;;
	debootstrap)
		echo "Installing debootstrap in $BS..."
		$BIN/busybox tar -C $BS -xvf $BIN/debootstrap.tar
		echo "Patching debootstrap to function properly on android..."
		$BIN/busybox sed -i "474,476d" $BS/usr/sbin/debootstrap
		$BIN/busybox sed -i "16i                DEBOOTSTRAP_DIR=$BS/usr/share/debootstrap" $BS/usr/sbin/debootstrap
		$BIN/busybox sed -i "17d" $BS/usr/sbin/debootstrap
		$BIN/busybox sed -i "1iPATH=/bin:/usr/bin:/sbin:/usr/sbin:/debootstrap:$BB" $BS/usr/sbin/debootstrap
		$BIN/busybox cp $BIN/pkgdetails $BS/usr/share/debootstrap/pkgdetails
		$BIN/busybox chmod 777 $BS/usr/share/debootstrap/pkgdetails
		echo "Done."
	;;	
	image)
		echo "Creating empty ext2 diskimage..."
		$BIN/busybox dd if=/dev/zero of=$KIT/disk.img bs=1M count=0 seek=$SIZ
		$BIN/mke2fs -F $KIT/disk.img
		echo "Done."
	;;	
	setup)
		echo "Writing basic config files to debian system..."
		echo "deb http://$SRC $DST main" > $MNT/etc/apt/sources.list
		echo -e "domain local\nsearch local\n" > $MNT/etc/resolv.conf
		echo -e "# DNS Google\nnameserver 8.8.8.8\nnameserver 8.8.4.4\n" >> $MNT/etc/resolv.conf
		echo debkit > $MNT/etc/debian_chroot
                echo -e "LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';\nexport LS_COLORS\nalias ls='ls --color=auto'" > $MNT/root/.bashrc
		echo "Done."
	;;
	chroot)
                clear
		echo "Setting up the environment..."
		export TMPDIR=/tmp
		export USER=root
		export HOME=/root
		export SHELL=/bin/bash
		export TERM=xterm
		export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin
		export LC_ALL=C
		export LANGUAGE=C
		export LANG=C
		echo "chrooting into the debkit..."
		$BIN/busybox chroot $MNT /bin/bash
	;;
	esac
}

debootstrap_sys()
{
	case "$1" in
	one)
		echo "Going into stage one of debootstrapping the new system..."
		$BS/usr/sbin/debootstrap --verbose --no-check-gpg --foreign --arch=armhf --extractor=ar --include=locales,sudo,man-db $DST $MNT http://$SRC
		echo "Done."
	;;	
	two)
		echo "Going into stage two of debootstrapping the new system..."
		$BIN/busybox chroot $MNT /bin/sh -c '/debootstrap/debootstrap --second-stage'
		echo "Done."
	;;
	esac
}


mount_sys()
{
	case "$1" in
	root)
		echo "Mounting system onto $MNT..."
		$BIN/busybox mknod /dev/block/loop99 b 7 100
		$BIN/busybox losetup /dev/block/loop99 $KIT/disk.img
		$BIN/busybox mount -t ext2 /dev/block/loop99 $MNT
	;;
	proc)
		echo "Mounting proc..."
		$BIN/busybox mount -t proc none $MNT/proc
	;;
	sys)
		echo "Mounting sys..."
		$BIN/busybox mount -t sysfs none $MNT/sys
	;;
	dev)
		echo "Mounting dev..."
		$BIN/busybox mount -o bind /dev $MNT/dev
		$BIN/busybox mount -t devpts none $MNT/dev/pts	
	;;
	esac
}

umount_sys()
{
	case "$1" in
	dev)
		echo "Unmounting dev..."
		$BIN/busybox umount $MNT/dev/pts
		$BIN/busybox umount $MNT/dev
	;;
	sys)
		echo "Unmounting sys..."
		$BIN/busybox umount $MNT/sys
	;;
	proc)
		echo "Unmounting proc..."
		$BIN/busybox umount $MNT/proc
	;;
	root)
		echo "Unmounting $MNT..."
		$BIN/busybox umount $MNT
	;;
	esac
}

case "$1" in
install)
	setup_sys system
	setup_sys debootstrap
	setup_sys busybox
	setup_sys image
	mount_sys root
	debootstrap_sys one
	debootstrap_sys two
	setup_sys setup
	umount_sys root
	echo "Done! You chroot image is ready."
;;
setup)
	setup_sys setup
;;
mount)
	mount_sys root
	mount_sys dev
	mount_sys sys
	mount_sys proc
	echo "Done."
;;
umount)
	umount_sys dev
	umount_sys sys
	umount_sys proc
	umount_sys root
	echo "Done."
;;
chroot)
        mount | grep "/dev/block/loop99 $MNT" > /dev/null
        if [ $? -eq 0 ]
        then
            setup_sys chroot
        else
            echo "Please use 'debkit mount' first before chrooting!"
            echo "Or enable auto-mount on startup in the DebKit App."
        fi    
;;
*)
	echo "Debkit Debian on Android Installation Kit"
	echo "Usage: debkit mount|umount|chroot"
;;
esac